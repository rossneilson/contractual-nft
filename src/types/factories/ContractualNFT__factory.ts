/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ContractualNFT,
  ContractualNFTInterface,
} from "../ContractualNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "agreementId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "CompleteAndMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "agreementId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ipfsHash",
        type: "string",
      },
    ],
    name: "CreateNewAgreement",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "agreementId",
        type: "uint256",
      },
    ],
    name: "approveAgreement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "ipfsHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "address",
                name: "cptyAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "approved",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "denied",
                type: "bool",
              },
            ],
            internalType: "struct ContractualNFT.Counterparty[]",
            name: "counterparties",
            type: "tuple[]",
          },
        ],
        internalType: "struct ContractualNFT.Agreement",
        name: "agreement",
        type: "tuple",
      },
    ],
    name: "checkIfComplete",
    outputs: [
      {
        internalType: "bool",
        name: "isComplete",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "agreementId",
        type: "uint256",
      },
    ],
    name: "completeAgreement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "counterpartyAddresses",
        type: "address[]",
      },
      {
        internalType: "string",
        name: "ipfsHash",
        type: "string",
      },
    ],
    name: "defineAgreement",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "agreementId",
        type: "uint256",
      },
    ],
    name: "disapproveAgreement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "agreementId",
        type: "uint256",
      },
    ],
    name: "getAgreement",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "ipfsHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "address",
                name: "cptyAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "approved",
                type: "bool",
              },
              {
                internalType: "bool",
                name: "denied",
                type: "bool",
              },
            ],
            internalType: "struct ContractualNFT.Counterparty[]",
            name: "counterparties",
            type: "tuple[]",
          },
        ],
        internalType: "struct ContractualNFT.Agreement",
        name: "agreement",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600e81526d10dbdb9d1c9858dd1d585b13919560921b60208083019182528351808501909452600484526310d3d39560e21b908401528151919291620000649160009162000088565b5080516200007a90600190602084019062000088565b50506001600655506200016b565b82805462000096906200012e565b90600052602060002090601f016020900481019282620000ba576000855562000105565b82601f10620000d557805160ff191683800117855562000105565b8280016001018555821562000105579182015b8281111562000105578251825591602001919060010190620000e8565b506200011392915062000117565b5090565b5b8082111562000113576000815560010162000118565b600181811c908216806200014357607f821691505b602082108114156200016557634e487b7160e01b600052602260045260246000fd5b50919050565b61220b806200017b6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806381de04dc116100ad578063a22cb46511610071578063a22cb46514610284578063b132d78b14610297578063b88d4fde146102aa578063c87b56dd146102bd578063e985e9c5146102d057600080fd5b806381de04dc1461023b5780638458cf8e1461024e5780638ada066e1461026157806395d89b41146102695780639e6008491461027157600080fd5b806340321f5e116100f457806340321f5e146101c157806342842e0e146101d45780634f9f6fe6146101e75780636352211e1461020757806370a082311461021a57600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806323b872dd146101ae575b600080fd5b61014461013f366004611c3a565b61030c565b60405190151581526020015b60405180910390f35b61016161035e565b6040516101509190611e55565b61018161017c366004611da5565b6103f0565b6040516001600160a01b039091168152602001610150565b6101ac6101a7366004611b4b565b61048a565b005b6101ac6101bc366004611a6e565b6105a0565b6101ac6101cf366004611da5565b6105d1565b6101ac6101e2366004611a6e565b6106ee565b6101fa6101f5366004611da5565b610709565b6040516101509190611f0b565b610181610215366004611da5565b610864565b61022d610228366004611a22565b6108db565b604051908152602001610150565b61022d610249366004611b74565b610962565b6101ac61025c366004611da5565b610b4c565b60065461022d565b610161610e4e565b61014461027f366004611c72565b610e5d565b6101ac610292366004611b22565b610ef2565b6101ac6102a5366004611da5565b610fb7565b6101ac6102b8366004611aa9565b6110d4565b6101616102cb366004611da5565b61110c565b6101446102de366004611a3c565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061033d57506001600160e01b03198216635b5e139f60e01b145b8061035857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461036d90612116565b80601f016020809104026020016040519081016040528092919081815260200182805461039990612116565b80156103e65780601f106103bb576101008083540402835291602001916103e6565b820191906000526020600020905b8154815290600101906020018083116103c957829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661046e5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061049582610864565b9050806001600160a01b0316836001600160a01b031614156105035760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610465565b336001600160a01b038216148061051f575061051f81336102de565b6105915760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610465565b61059b83836111f4565b505050565b6105aa3382611262565b6105c65760405162461bcd60e51b815260040161046590611eba565b61059b838383611359565b6000818152600760205260408120600101905b60008381526007602052604090206001015481101561059b57336001600160a01b031682828154811061062757634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201546001600160a01b031614156106dc57600082828154811061066957634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160020160006101000a81548160ff02191690831515021790555060018282815481106106b357634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160020160016101000a81548160ff0219169083151502179055505b806106e68161214b565b9150506105e4565b61059b838383604051806020016040528060008152506110d4565b604080518082019091526060808252602082015260008281526007602052604090819020815180830190925280548290829061074490612116565b80601f016020809104026020016040519081016040528092919081815260200182805461077090612116565b80156107bd5780601f10610792576101008083540402835291602001916107bd565b820191906000526020600020905b8154815290600101906020018083116107a057829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610856576000848152602090819020604080516080810182526003860290920180546001600160a01b031683526001808201548486015260029091015460ff80821615159385019390935261010090049091161515606083015290835290920191016107eb565b505050915250909392505050565b6000818152600260205260408120546001600160a01b0316806103585760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610465565b60006001600160a01b0382166109465760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610465565b506001600160a01b031660009081526003602052604090205490565b600680546000918190836109758361214b565b909155505060008181526007602090815260409091208451909161099d9183918701906118e6565b5060005b8551811015610b0857600860008783815181106109ce57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190915055816001016040518060800160405280888481518110610a4c57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b0390811683526006805484840152600060408086018290526060958601829052875460018082018a55988352858320885160039092020180546001600160a01b0319169190951617845593860151968301969096559184015160029091018054949093015161ffff1990941690151561ff0019161761010093151593909302929092179055805491610af08361214b565b91905055508080610b009061214b565b9150506109a1565b507fbcafd6e1572c7df98bcc8e3ba53a340e1a72edf8105c67e3d2a71860cf5beb20828686604051610b3c93929190611f9d565b60405180910390a1509392505050565b60008181526007602052604090819020815180830190925280549091610c9a91839082908290610b7b90612116565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba790612116565b8015610bf45780601f10610bc957610100808354040283529160200191610bf4565b820191906000526020600020905b815481529060010190602001808311610bd757829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610c8d576000848152602090819020604080516080810182526003860290920180546001600160a01b031683526001808201548486015260029091015460ff8082161515938501939093526101009004909116151560608301529083529092019101610c22565b5050505081525050610e5d565b610ce65760405162461bcd60e51b815260206004820152601760248201527f41677265656d656e74206e6f7420636f6d706c6574652e0000000000000000006044820152606401610465565b60005b600182015481101561059b57610d73826001018281548110610d1b57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201546001840180546001600160a01b039092169184908110610d5c57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600101546114f9565b7f1d9e760a0d1b261815a474aaa152eb098f4e92fb89ebd410204db2f71452cd0983836001018381548110610db857634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201546001850180546001600160a01b039092169185908110610df957634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160010154604051610e34939291909283526001600160a01b03919091166020830152604082015260600190565b60405180910390a180610e468161214b565b915050610ce9565b60606001805461036d90612116565b60008060005b836020015151811015610ecc5783602001518181518110610e9457634e487b7160e01b600052603260045260246000fd5b6020026020010151604001511515600115151415610eba5781610eb68161214b565b9250505b80610ec48161214b565b915050610e63565b50826020015151811415610ee35750600192915050565b50600092915050565b50919050565b6001600160a01b038216331415610f4b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610465565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6000818152600760205260408120600101905b60008381526007602052604090206001015481101561059b57336001600160a01b031682828154811061100d57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600390910201546001600160a01b031614156110c257600182828154811061104f57634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160020160006101000a81548160ff021916908315150217905550600082828154811061109957634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160020160016101000a81548160ff0219169083151502179055505b806110cc8161214b565b915050610fca565b6110de3383611262565b6110fa5760405162461bcd60e51b815260040161046590611eba565b61110684848484611517565b50505050565b6000818152600260205260409020546060906001600160a01b031661118b5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610465565b60006111a260408051602081019091526000815290565b905060008151116111c257604051806020016040528060008152506111ed565b806111cc8461154a565b6040516020016111dd929190611de9565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061122982610864565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166112db5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610465565b60006112e683610864565b9050806001600160a01b0316846001600160a01b031614806113215750836001600160a01b0316611316846103f0565b6001600160a01b0316145b8061135157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661136c82610864565b6001600160a01b0316146113d45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610465565b6001600160a01b0382166114365760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610465565b6114416000826111f4565b6001600160a01b038316600090815260036020526040812080546001929061146a9084906120d3565b90915550506001600160a01b03821660009081526003602052604081208054600192906114989084906120a7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b611513828260405180602001604052806000815250611664565b5050565b611522848484611359565b61152e84848484611697565b6111065760405162461bcd60e51b815260040161046590611e68565b60608161156e5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561159857806115828161214b565b91506115919050600a836120bf565b9150611572565b60008167ffffffffffffffff8111156115c157634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156115eb576020820181803683370190505b5090505b8415611351576116006001836120d3565b915061160d600a86612166565b6116189060306120a7565b60f81b81838151811061163b57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535061165d600a866120bf565b94506115ef565b61166e83836117a4565b61167b6000848484611697565b61059b5760405162461bcd60e51b815260040161046590611e68565b60006001600160a01b0384163b1561179957604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906116db903390899088908890600401611e18565b602060405180830381600087803b1580156116f557600080fd5b505af1925050508015611725575060408051601f3d908101601f1916820190925261172291810190611c56565b60015b61177f573d808015611753576040519150601f19603f3d011682016040523d82523d6000602084013e611758565b606091505b5080516117775760405162461bcd60e51b815260040161046590611e68565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611351565b506001949350505050565b6001600160a01b0382166117fa5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610465565b6000818152600260205260409020546001600160a01b03161561185f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610465565b6001600160a01b03821660009081526003602052604081208054600192906118889084906120a7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b8280546118f290612116565b90600052602060002090601f016020900481019282611914576000855561195a565b82601f1061192d57805160ff191683800117855561195a565b8280016001018555821561195a579182015b8281111561195a57825182559160200191906001019061193f565b5061196692915061196a565b5090565b5b80821115611966576000815560010161196b565b600067ffffffffffffffff831115611999576119996121a6565b6119ac601f8401601f1916602001612052565b90508281528383830111156119c057600080fd5b828260208301376000602084830101529392505050565b80356001600160a01b03811681146119ee57600080fd5b919050565b803580151581146119ee57600080fd5b600082601f830112611a13578081fd5b6111ed8383356020850161197f565b600060208284031215611a33578081fd5b6111ed826119d7565b60008060408385031215611a4e578081fd5b611a57836119d7565b9150611a65602084016119d7565b90509250929050565b600080600060608486031215611a82578081fd5b611a8b846119d7565b9250611a99602085016119d7565b9150604084013590509250925092565b60008060008060808587031215611abe578081fd5b611ac7856119d7565b9350611ad5602086016119d7565b925060408501359150606085013567ffffffffffffffff811115611af7578182fd5b8501601f81018713611b07578182fd5b611b168782356020840161197f565b91505092959194509250565b60008060408385031215611b34578182fd5b611b3d836119d7565b9150611a65602084016119f3565b60008060408385031215611b5d578182fd5b611b66836119d7565b946020939093013593505050565b60008060408385031215611b86578182fd5b823567ffffffffffffffff80821115611b9d578384fd5b818501915085601f830112611bb0578384fd5b81356020611bc5611bc083612083565b612052565b8083825282820191508286018a848660051b8901011115611be4578889fd5b8896505b84871015611c0d57611bf9816119d7565b835260019690960195918301918301611be8565b5096505086013592505080821115611c23578283fd5b50611c3085828601611a03565b9150509250929050565b600060208284031215611c4b578081fd5b81356111ed816121bc565b600060208284031215611c67578081fd5b81516111ed816121bc565b60006020808385031215611c84578182fd5b823567ffffffffffffffff80821115611c9b578384fd5b81850191506040808388031215611cb0578485fd5b611cb8612006565b833583811115611cc6578687fd5b611cd289828701611a03565b8252508484013583811115611ce5578687fd5b80850194505087601f850112611cf9578586fd5b83359250611d09611bc084612083565b8084825286820191508686018a888760071b8901011115611d28578889fd5b8896505b85871015611d9257608080828d031215611d4457898afd5b611d4c61202f565b611d55836119d7565b8152898301358a820152611d6a8784016119f3565b878201526060611d7b8185016119f3565b908201528452600197909701969288019201611d2c565b5095820195909552979650505050505050565b600060208284031215611db6578081fd5b5035919050565b60008151808452611dd58160208601602086016120ea565b601f01601f19169290920160200192915050565b60008351611dfb8184602088016120ea565b835190830190611e0f8183602088016120ea565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e4b90830184611dbd565b9695505050505050565b6020815260006111ed6020830184611dbd565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600060208083526060845160408084870152611f2983870183611dbd565b87850151878203601f1901838901528051808352908601935086918601905b80831015611f9057845180516001600160a01b031683528781015188840152848101511515858401528601511515868301529386019360019290920191608090910190611f48565b5098975050505050505050565b60006060820185835260206060818501528186518084526080860191508288019350845b81811015611fe65784516001600160a01b031683529383019391830191600101611fc1565b50508481036040860152611ffa8187611dbd565b98975050505050505050565b6040805190810167ffffffffffffffff81118282101715612029576120296121a6565b60405290565b6040516080810167ffffffffffffffff81118282101715612029576120296121a6565b604051601f8201601f1916810167ffffffffffffffff8111828210171561207b5761207b6121a6565b604052919050565b600067ffffffffffffffff82111561209d5761209d6121a6565b5060051b60200190565b600082198211156120ba576120ba61217a565b500190565b6000826120ce576120ce612190565b500490565b6000828210156120e5576120e561217a565b500390565b60005b838110156121055781810151838201526020016120ed565b838111156111065750506000910152565b600181811c9082168061212a57607f821691505b60208210811415610eec57634e487b7160e01b600052602260045260246000fd5b600060001982141561215f5761215f61217a565b5060010190565b60008261217557612175612190565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146121d257600080fd5b5056fea2646970667358221220f9a2b8fb20704afca819acdaca12948faf9d55626b2446033ba2de1e87c6689064736f6c63430008040033";

export class ContractualNFT__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractualNFT> {
    return super.deploy(overrides || {}) as Promise<ContractualNFT>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ContractualNFT {
    return super.attach(address) as ContractualNFT;
  }
  connect(signer: Signer): ContractualNFT__factory {
    return super.connect(signer) as ContractualNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractualNFTInterface {
    return new utils.Interface(_abi) as ContractualNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractualNFT {
    return new Contract(address, _abi, signerOrProvider) as ContractualNFT;
  }
}
